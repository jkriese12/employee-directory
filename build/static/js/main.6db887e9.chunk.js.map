{"version":3,"sources":["components/Employee/index.js","components/Header/index.js","components/Wrapper/index.js","utils/API.js","App.js","reportWebVitals.js","index.js"],"names":["Employee","props","className","alt","name","src","pic","phone","location","email","Header","Wrapper","children","axios","get","App","useState","employees","setEmployees","filterAu","filter","emp","nat","filterGb","filterUs","empAllId","document","getElementById","empAuId","empGbId","empUsId","useEffect","API","then","res","data","results","map","first","last","nameLast","picture","medium","cell","city","state","id","value","type","onClick","index","selectedIndex","dropDownText","options","text","classList","add","remove","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.6db887e9.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nconst Employee = (props) => {\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col\">\n          <div className=\"card\">\n            <div className=\"img-container\">\n              <img alt={props.name} src={props.pic} />\n            </div>\n            <div className=\"content\">\n              <ul>\n                <li>\n                  <strong>Name:</strong> {props.name}\n                </li>\n                <li>\n                  <strong>Phone:</strong> {props.phone}\n                </li>\n                <li>\n                  <strong>Location:</strong> {props.location}\n                </li>\n                <li>\n                  <strong>Email:</strong> {props.email}\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Employee;\n","import React from \"react\";\n\nfunction Header() {\n  return (\n    <div className=\"jumbotron\">\n      <h1 className=\"display-4 text-center\">Internal Employee Directory</h1>\n\n      <p className=\"lead text-center\">Super Duper Cool Company LLC</p>\n    </div>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import axios from \"axios\";\n// API link to call from\nconst randomApi = \"https://randomuser.me/api/?results=1000&nat=us,au,gb\";\n// Exporting function to get data from API\nexport default {\n  search: function () {\n    return axios.get(randomApi);\n  },\n};\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Employee from \"./components/Employee\";\nimport Header from \"./components/Header\";\n// import SortButtons from \"./components/SortButtons\";\nimport Wrapper from \"./components/Wrapper\";\nimport API from \"./utils/API\";\nfunction App() {\n  // Setting state for all employees and based on country\n  const [employees, setEmployees] = useState([]);\n  // Sets the state for the cycling of employees by last name\n  const [sortName, setSortName] = useState(\"nameLast\");\n\n  // Variables holding filter data for different countries\n  const filterAu = employees.filter((emp) => emp.nat === \"AU\");\n  const filterGb = employees.filter((emp) => emp.nat === \"GB\");\n  const filterUs = employees.filter((emp) => emp.nat === \"US\");\n  // Variables to hold ID's for displaying data\n  const empAllId = document.getElementById(\"all\");\n  const empAuId = document.getElementById(\"au\");\n  const empGbId = document.getElementById(\"gb\");\n  const empUsId = document.getElementById(\"us\");\n\n  // Buttton click event for sorting array data\n  const handleSort = () => {\n    const index = document.getElementById(\"countries\").selectedIndex;\n    const dropDownText = document.getElementById(\"countries\").options[index].text;\n\n    if (dropDownText === \"Australia\") {\n      empAllId.classList.add(\"empAll\");\n      empGbId.classList.add(\"empAll\");\n      empUsId.classList.add(\"empAll\");\n      empAuId.classList.remove(\"empAll\");\n    } else if (dropDownText === \"Great Britain\") {\n      empAllId.classList.add(\"empAll\");\n      empGbId.classList.add(\"empAll\");\n      empUsId.classList.add(\"empAll\");\n      empGbId.classList.remove(\"empAll\");\n    } else if (dropDownText === \"USA\") {\n      empAllId.classList.add(\"empAll\");\n      empGbId.classList.add(\"empAll\");\n      empUsId.classList.add(\"empAll\");\n      empUsId.classList.remove(\"empAll\");\n    } else if (dropDownText === \"All Employees\") {\n      empAllId.classList.add(\"empAll\");\n      empGbId.classList.add(\"empAll\");\n      empUsId.classList.add(\"empAll\");\n      empAllId.classList.remove(\"empAll\");\n    }\n  };\n\n  // Calling API to initialize on page load to have all the data available\n  useEffect(() => {\n    API.search().then((res) => {\n      setEmployees(\n        res.data.results.map((emp) => {\n          return {\n            name: emp.name.first + \" \" + emp.name.last,\n            nameLast: emp.name.last,\n            pic: emp.picture.medium,\n            email: emp.email,\n            phone: emp.cell,\n            location: emp.location.city + \", \" + emp.location.state,\n            nat: emp.nat,\n          };\n        })\n      );\n    });\n  }, []);\n\n  return (\n    <div>\n      <Header />\n      <div>\n        <li className=\"country\">\n          <label>Select Country:</label>\n          <select id=\"countries\">\n            <option value=\"1\">All Employees</option>\n            <option value=\"2\">USA</option>\n            <option value=\"3\">Great Britain</option>\n            <option value=\"4\">Australia</option>\n          </select>\n        </li>\n      </div>\n      <div className=\"button\">\n        <button className=\"btn btn-primary btn-lg\" type=\"button\" onClick={handleSort}>\n          {\" \"}\n          Search\n        </button>\n      </div>\n      <Wrapper>\n        <div id=\"all\" className=\"empAll\">\n          {employees.map((emp) => (\n            <Employee\n              name={emp.name}\n              pic={emp.pic}\n              email={emp.email}\n              phone={emp.phone}\n              location={emp.location}\n            />\n          ))}\n        </div>\n        <div id=\"au\" className=\"empAll\">\n          {filterAu.map((emp) => (\n            <Employee\n              name={emp.name}\n              pic={emp.pic}\n              email={emp.email}\n              phone={emp.phone}\n              location={emp.location}\n            />\n          ))}\n        </div>\n        <div id=\"gb\" className=\"empAll\">\n          {filterGb.map((emp) => (\n            <Employee\n              name={emp.name}\n              pic={emp.pic}\n              email={emp.email}\n              phone={emp.phone}\n              location={emp.location}\n            />\n          ))}\n        </div>\n        <div id=\"us\" className=\"empAll\">\n          {filterUs.map((emp) => (\n            <Employee\n              name={emp.name}\n              pic={emp.pic}\n              email={emp.email}\n              phone={emp.phone}\n              location={emp.location}\n            />\n          ))}\n        </div>\n      </Wrapper>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}